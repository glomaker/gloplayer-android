package org.glomaker.mobileplayer.assets{	import flash.display.MovieClip;	import flash.events.Event;	import flash.text.TextField;	import flash.utils.getTimer;	public class JourneyDetailsBase extends MovieClip	{		public var bg:MovieClip;		public var tick:MovieClip;		public var compass:MovieClip;		public var indexDisplay:TextField;				protected var pulseFrame:uint;		protected var pulseFrameReal:Number;		protected var pulseFrameUpdate:int;				public function JourneyDetailsBase() 		{			addEventListener(Event.ADDED_TO_STAGE, addedToStageHandler);			addEventListener(Event.REMOVED_FROM_STAGE, removedFromStageHandler);		}		protected var _compassVisible:Boolean;				public function set compassVisible(value:Boolean):void		{			if (value == _compassVisible)				return;							_compassVisible = value;			update();		}				protected var _pointerVisible:Boolean = true;				public function set pointerVisible(value:Boolean):void		{			if (value == _pointerVisible)				return;							_pointerVisible = value;			update();		}				protected var _visited:Boolean = false;				public function set visited(value:Boolean):void		{			if (value == _visited)				return;						_visited = value;			update();		}				protected var _distance:String = "-";				public function set distance(value:String):void		{			value = value ? value : "-";			if (value == _distance)				return;						_distance = value;			update();		}				protected var _direction:Number = 0;				public function set direction(value:Number):void		{			value = isNaN(value) ? 0 : value;			if (value == _direction)				return;						_direction = value;			update();		}				protected var _index:uint;				public function set index(value:uint):void		{			if (value == _index)				return;						_index = value;			update();		}				protected var _pps:Number;				public function set pps(value:Number):void		{			if (value == _pps)				return;						var old:uint = _pps;			_pps = value;						pulseFrame = 0;			pulseFrameReal = 0;						if (stage)			{				if (_pps > 0 && old == 0)					stage.addEventListener(Event.ENTER_FRAME, enterFrameHandler);				else if (_pps == 0 && old > 0)					stage.removeEventListener(Event.ENTER_FRAME, enterFrameHandler);			}						update();		}				protected function update():void		{			if (!stage)				return;						compass.visible = _compassVisible;						bg.visible = !_visited;			tick.visible = _visited;			indexDisplay.textColor = _visited ? 0xffffff : 0x596588;						compass.distance.text = _distance;						compass.pointer.rotation = _direction;			compass.pointer.visible = _pointerVisible;						compass.gotoAndStop(pulseFrame);						indexDisplay.text = _index.toString();		}				protected function addedToStageHandler(event:Event):void		{			update();						if (_pps > 0)				stage.addEventListener(Event.ENTER_FRAME, enterFrameHandler);		}				protected function removedFromStageHandler(event:Event):void		{			if (_pps > 0)				stage.removeEventListener(Event.ENTER_FRAME, enterFrameHandler);		}				protected function enterFrameHandler(event:Event):void		{			var dt:Number = (getTimer() - pulseFrameUpdate) / 1000;			pulseFrameReal = (pulseFrameReal + (dt * _pps * 24)) % 24;			pulseFrame = Math.round(pulseFrameReal);			pulseFrameUpdate = getTimer();						compass.gotoAndStop(pulseFrame);		}	}	}